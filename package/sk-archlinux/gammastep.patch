diff --git a/include/modules/gammastep.hpp b/include/modules/gammastep.hpp
new file mode 100644
index 00000000..43da0c7c
--- /dev/null
+++ b/include/modules/gammastep.hpp
@@ -0,0 +1,25 @@
+#pragma once
+
+#include "ALabel.hpp"
+#include "bar.hpp"
+#include "util/sleeper_thread.hpp"
+
+namespace waybar::modules {
+
+class Gammastep : public ALabel {
+ public:
+  Gammastep(const std::string&, const waybar::Bar&, const Json::Value&);
+  ~Gammastep();
+  void update();
+
+ private:
+  bool handleToggle(GdkEventButton* const& e);
+  void killChildProcess();
+
+  const Bar&                    bar_;
+  int32_t                       pid_;
+  std::string                   status_;
+  util::SleeperThread thread_;
+};
+
+}  // namespace waybar::modules
diff --git a/include/util/command.hpp b/include/util/command.hpp
index 4b9decaa..32977a61 100644
--- a/include/util/command.hpp
+++ b/include/util/command.hpp
@@ -1,5 +1,8 @@
 #pragma once
 
+#include <cctype>
+#include <filesystem>
+#include <fstream>
 #include <fcntl.h>
 #include <giomm.h>
 #include <spdlog/spdlog.h>
@@ -169,4 +172,18 @@ inline int32_t forkExec(const std::string& cmd) {
   return pid;
 }
 
+// Returns -1 if not found.
+inline int32_t processByName(const std::string& name) {
+  namespace fs = std::filesystem;
+  for (const auto& e : fs::directory_iterator("/proc")) {
+    if (!e.is_directory()) continue;
+    if (!std::isdigit(e.path().filename().string().at(0))) continue;
+    std::ifstream comm(e.path() / "comm");
+    std::string line;
+    std::getline(comm, line);
+    if (line == name) return std::stoi(e.path().filename().string());
+  }
+  return -1;
+}
+
 }  // namespace waybar::util::command
diff --git a/meson.build b/meson.build
index 7f9854d5..738f98b3 100644
--- a/meson.build
+++ b/meson.build
@@ -164,6 +164,7 @@ src_files = files(
     'src/AAppIconLabel.cpp',
     'src/modules/custom.cpp',
     'src/modules/disk.cpp',
+    'src/modules/gammastep.cpp',
     'src/modules/idle_inhibitor.cpp',
     'src/modules/image.cpp',
     'src/modules/load.cpp',
diff --git a/resources/config.jsonc b/resources/config.jsonc
index 67d5ff5b..aea30876 100644
--- a/resources/config.jsonc
+++ b/resources/config.jsonc
@@ -18,6 +18,7 @@
     "modules-right": [
         "mpd",
         "idle_inhibitor",
+        "gammastep",
         "pulseaudio",
         "network",
         "power-profiles-daemon",
@@ -102,6 +103,14 @@
             "deactivated": ""
         }
     },
+    "gammastep": {
+        "format": "{icon}",
+        "format-icons": {
+            "activated": "",
+            "deactivated": ""
+        },
+        "interval": 5
+    },
     "tray": {
         // "icon-size": 21,
         "spacing": 10,
diff --git a/resources/style.css b/resources/style.css
index 7e830285..3fc6027e 100644
--- a/resources/style.css
+++ b/resources/style.css
@@ -93,6 +93,7 @@ button:hover {
 #idle_inhibitor,
 #scratchpad,
 #power-profiles-daemon,
+#gammastep,
 #mpd {
     padding: 0 10px;
     color: #ffffff;
@@ -256,6 +257,16 @@ label:focus {
     color: #2d3436;
 }
 
+#gammastep {
+    background-color: #ecf0f1;
+    color: #2d3436;
+}
+
+#gammastep.activated {
+    background-color: #2d3436;
+    color: #ffffff;
+}
+
 #mpd {
     background-color: #66cc99;
     color: #2a5c45;
diff --git a/src/factory.cpp b/src/factory.cpp
index 1483397d..b691490f 100644
--- a/src/factory.cpp
+++ b/src/factory.cpp
@@ -51,6 +51,7 @@
 #include "modules/load.hpp"
 #endif
 #include "modules/idle_inhibitor.hpp"
+#include "modules/gammastep.hpp"
 #if defined(HAVE_MEMORY_LINUX) || defined(HAVE_MEMORY_BSD)
 #include "modules/memory.hpp"
 #endif
@@ -225,6 +226,9 @@ waybar::AModule* waybar::Factory::makeModule(const std::string& name,
     if (ref == "idle_inhibitor") {
       return new waybar::modules::IdleInhibitor(id, bar_, config_[name]);
     }
+    if (ref == "gammastep") {
+      return new waybar::modules::Gammastep(id, bar_, config_[name]);
+    }
 #if defined(HAVE_MEMORY_LINUX) || defined(HAVE_MEMORY_BSD)
     if (ref == "memory") {
       return new waybar::modules::Memory(id, config_[name]);
diff --git a/src/modules/gammastep.cpp b/src/modules/gammastep.cpp
new file mode 100644
index 00000000..b991bb5c
--- /dev/null
+++ b/src/modules/gammastep.cpp
@@ -0,0 +1,60 @@
+#include <fmt/format.h>
+#include "modules/gammastep.hpp"
+#include <spdlog/spdlog.h>
+#include "util/command.hpp"
+
+waybar::modules::Gammastep::Gammastep(const std::string& id, const Bar& bar,
+                                      const Json::Value& config)
+    : ALabel(config, "gammastep", id, "{status}", 5),
+      bar_(bar),
+      pid_(-1),
+      status_("deactivated") {
+  pid_ = util::command::processByName("gammastep");
+  if (pid_ >= 0) status_ = "activated";
+
+  event_box_.add_events(Gdk::BUTTON_PRESS_MASK);
+  event_box_.signal_button_press_event().connect(sigc::mem_fun(*this, &Gammastep::handleToggle));
+  thread_ = [this] {
+    dp.emit();
+    thread_.sleep_for(interval_);
+  };
+}
+
+waybar::modules::Gammastep::~Gammastep() {
+  if (pid_ > 0) killChildProcess();
+}
+
+auto waybar::modules::Gammastep::killChildProcess() -> void {
+  killpg(pid_, SIGTERM);
+  waitpid(pid_, NULL, 0);
+  pid_ = -1;
+  status_ = "deactivated";
+}
+
+auto waybar::modules::Gammastep::update() -> void {
+  pid_ = util::command::processByName("gammastep");
+  status_ = pid_ >= 0 ? "activated" : "deactivated";
+
+  label_.set_markup(
+      fmt::format(fmt::runtime(format_), fmt::arg("status", status_), fmt::arg("icon", getIcon(0, status_))));
+  label_.get_style_context()->add_class(status_);
+  if (tooltipEnabled()) {
+    label_.set_tooltip_text(status_);
+  }
+}
+
+bool waybar::modules::Gammastep::handleToggle(GdkEventButton* const& e) {
+  if (e->button == 1) {
+    label_.get_style_context()->remove_class(status_);
+    if (pid_ > 0) {
+      killChildProcess();
+    } else {
+      pid_ = util::command::forkExec("gammastep -m wayland");
+      status_ = "activated";
+    }
+  }
+  // Delay updates a bit to let the process start/stop.
+  thread_.sleep_for(std::chrono::seconds(1));
+  ALabel::handleToggle(e);
+  return true;
+}
